/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;

import Controlador.Parking;
import Modelo.ElectricCar;
import Modelo.FuelCar;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import javax.swing.ImageIcon;

/**
 *
 * @author rubco
 */
public class CarsPanel extends javax.swing.JPanel {

    /**
     * Creates new form CarsPanel
     */
    private Parking parking;
    private final Image fuelImage;
    private final Image electricImage;
    private final Image electricImageR;
    private final Image fuelImageR;

    public CarsPanel() {
        initComponents();
        setOpaque(false);
        setPreferredSize(new Dimension(1000, 700));
        fuelImage = new ImageIcon(getClass().getResource("/imagenes/rayo.png")).getImage();
        electricImage = new ImageIcon(getClass().getResource("/imagenes/cocheElectrico.png")).getImage();
        electricImageR = new ImageIcon(getClass().getResource("/imagenes/cocheElectricoR.png")).getImage();
        fuelImageR = new ImageIcon(getClass().getResource("/imagenes/rayoR.png")).getImage();
        repaint();
    }

    public void setParking(Parking park) {
        parking = park;
    }

    @Override
    protected void paintComponent(Graphics g) {

        super.paintComponent(g);
        setPreferredSize(new Dimension(1000, 700));

        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON
        );
        g2d.setFont(new Font("Segoe UI", Font.BOLD, 18));
        g2d.setColor(Color.WHITE);
        int posImagen = 20;
        for (int i = 0; i < 6; i++) {
            if (!parking.getParkingCheck()[i]) {
                continue;
            }
            if (parking.getParking().get(i) instanceof ElectricCar) {
                g2d.drawImage(electricImage, 20 + (165 * i), 10, 140, 270, this);
                ElectricCar elCar = (ElectricCar) parking.getParking().get(i);
                g2d.drawString("E" + elCar.getIdent(), 80 + (165 * i), 290);
            } else {
                g2d.drawImage(fuelImage, 20 + (165 * i), 10, 140, 270, this);
                FuelCar fuCar = (FuelCar) parking.getParking().get(i);
                g2d.drawString("C" + fuCar.getIdent(), 70 + (165 * i), 290);
            }
        }

        int contadorE = 0;
        for (ElectricCar elec : parking.getElectricQueue()) {
            if (contadorE < 2) {
                g2d.drawImage(electricImage, 415, 300 + (125 * contadorE), 85, 125, this);
                g2d.drawString("E" + elec.getIdent(), 440, 430 + (125 * contadorE));
            } else {
                g2d.drawImage(electricImageR, 375 - (125 * (contadorE - 2)), 570, 125, 85, this);
                g2d.drawString("E" + elec.getIdent(), 420 - (135 * (contadorE - 2)), 650);
            }
            contadorE++;
        }

        int contadorF = 0;
        for (FuelCar fuCar : parking.getFuelQueue()) {
            if (contadorF < 2) {
                g2d.drawImage(fuelImage, 515, 300 + (125 * contadorF), 85, 125, this);
                g2d.drawString("C" + fuCar.getIdent(), 540, 430 + (125 * contadorF));
            } else {
                g2d.drawImage(fuelImageR, 515 + (125 * (contadorF - 2)), 570, 125, 85, this);
                g2d.drawString("C" + fuCar.getIdent(), 550 + (135 * (contadorF - 2)), 650);
            }
            contadorF++;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
